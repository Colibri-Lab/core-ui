
@mixin custom-placeholder($color, $fontFamily: '', $size: '') {
    &::-webkit-input-placeholder { /* Edge */
        color: $color;
        @if ($fontFamily != '') {
            font-family: $fontFamily;
        }
        @if ($size != '') {
            font-size: $size;
        }
    } 
    
    &:-ms-input-placeholder { /* Internet Explorer 10-11 */
        color: $color;
        @if ($fontFamily != '') {
            font-family: $fontFamily;
        }
        @if ($size != '') {
            font-size: $size;
        }
    }
    
    &::placeholder {
        color: $color;
        @if ($fontFamily != '') {
            font-family: $fontFamily;
        }
        @if ($size != '') {
            font-size: $size;
        }
    }
}

@mixin custom-scroll($width, $bc, $stc, $sthc, $round: 0px) {
    /* width */
    &::-webkit-scrollbar {
        width: $width;
        height: $width;
        border: 0px;
        @if $round {
            border-radius: $round;
        }

    }

    /* Track */
    &::-webkit-scrollbar-track {
        background: $bc;
        border: 0px;
        @if $round {
            border-radius: $round;
        }
    }

    /* Handle */
    &::-webkit-scrollbar-thumb {
        background: $stc;
        border: 0px;
        @if $round {
            border-radius: $round;
        }
        outline: none;
    }

    /* Handle on hover */
    &::-webkit-scrollbar-thumb:hover {
        background: $sthc;
        border: 0px;
    }

    // scrollbar-color: $sthc $bc;
    // scrollbar-width: thin;

    // -ms-scrollbar-track-color: $bc;
    // -ms-scrollbar-face-color: $sthc;
    
    // &::-webkit-scrollbar-track {
    //     background-color: $scrollbar-track-color;
    // }
    // &::-webkit-scrollbar {
    //     width: $scrollbar-size;
    //     height: $scrollbar-size;
    // }
    // &::-webkit-scrollbar-thumb {
    //     background-color: $scrollbar-thumb-color;
    // }


}

@keyframes rotateInfiniteAnimation { from { transform: rotate(0deg); } to { transform: rotate(360deg); } }

@mixin rotateInfinite {
    animation: 2s linear 0s infinite normal rotateInfiniteAnimation;
}

@mixin rotateOnes($time) {
    animation: $time linear 0s normal rotateInfiniteAnimation;
}

@mixin respond-to($width) {
    @media only screen and (max-width: $width) {
        @content;
    }
}

@mixin respond-toh($height) {
    @media only screen and (max-height: $height) {
        @content;
    }
}

@mixin platform($platform) {
  body.-#{$platform} & {
    @content;
  }
}

@keyframes fadein {
    from {
        opacity: 0;
    }   
    to {
        opacity: 1;
    }
}

@keyframes fadeout {
    from {
        opacity: 1;
    }   
    to {
        opacity: 0;
    }
}

@mixin wrapper() {
    &.app-component-shown {
        display: flex;
    }
    align-items: stretch;
    justify-content: center;
}

@mixin wrapped($width) {
    max-width: $width;
    width: 100%;
    flex: 1 1 100%;
}

@mixin prefer($mode) {
    @media (prefers-color-scheme: dark) {
        @content;
    }
}
